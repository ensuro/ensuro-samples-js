name: Manual Test Quote-NewPolicy-Resolve flow
on:
  workflow_dispatch:
    inputs:
      api_url:
        description: "Quote API URL"
        required: true
      api_key:
        description: "Quote API KEY"
        required: true
      json_data:
        description: "Quote Json Data"
        required: true
      max_payout:
        description: "Maximum payout of the policy"
        required: false
        default: '1000'
      expiration:
        description: "Expiration (in seconds)"
        required: false
        default: '2592000'
      actual_payout:
        description: "Actual Payout of policy resolution"
        required: false
        default: '700'
      customer:
        description: "Customer address, will receive the payout"
        required: false
        default: '0xD758aF6BFC2f0908D7C5f89942be52C36a6b3cab'
      risk_module:
        description: "Risk Module address, if empty obtained automatically"
        required: false
        default: ''
jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
      - run: npm ci
      - env:
          RELAY_API_KEY: ${{ secrets.RELAY_API_KEY }}
          RELAY_API_SECRET: ${{ secrets.RELAY_API_SECRET }}
          QUOTE_JSON_DATA: ${{ github.event.inputs.json_data }}
        run: |
          echo "Getting RM Address using OPTIONS..."
          export QUOTE_API_URL=$(cat $GITHUB_EVENT_PATH | jq -r '.inputs.api_url' )
          export QUOTE_API_KEY=$(cat $GITHUB_EVENT_PATH | jq -r '.inputs.api_key' )
          echo "::add-mask::$QUOTE_API_URL"
          echo "::add-mask::$QUOTE_API_KEY"
          export RM_ADDRESS=`curl -s --request OPTIONS --url $QUOTE_API_URL --header "x-api-key: $QUOTE_API_KEY" --header 'accept: application/application/json' --header 'content-type: application/json'  | jq -r ".risk_module"`
          export MANUAL_RM=${{ github.event.inputs.risk_module }}
          export RM_ADDRESS=${MANUAL_RM:-${RM_ADDRESS}}
          echo "RiskModule: '$RM_ADDRESS'"
          ./cli.js quote-policy ${{ github.event.inputs.api_url }} --payout ${{ github.event.inputs.max_payout }} --expiration ${{ github.event.inputs.expiration }} --json-data '${{ github.event.inputs.json_data }}' --output-file signed-quote-policy-input.json
          sleep 15
          echo "Inputs Used for SignedQuote: "
          cat signed-quote-policy-input.json
          ./cli.js new-policy signed-quote-policy-input.json ${{ github.event.inputs.customer }} --output-file signed-quote-policy-output.json
          echo "Signed Quote Output: "
          cat signed-quote-policy-output.json
          sleep 15
          ./cli.js resolve-policy signed-quote-policy-output.json ${{ github.event.inputs.actual_payout }} --rm-address $RM_ADDRESS
